apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: web
        image: kaseykim7123/24kng_webpages:latest
        ports:
        - containerPort: 8000
        volumeMounts:
        - name: ssl
          mountPath: /app/vod/ssl/*
      volumes:
      - name: ssl
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: web-service
spec:
  selector:
    app: web
  ports:
  - name: web
    port: 8000
    targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        - containerPort: 443
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        - name: ssl
          mountPath: /etc/nginx/ssl
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
      - name: ssl
        secret:
          secretName: ssl-secret

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  selector:
    app: nginx
  ports:
  - name: http
    port: 80
    targetPort: 80
  - name: https
    port: 443
    targetPort: 443

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;
    error_log /var/log/nginx/error.log;
    pid /run/nginx.pid;
    events {
        worker_connections 1024;
    }

    http {
        upstream django {
            server web:8000;
        }

        server {
            listen 80;
            server_name www.24kng.fun;
            return 301 https://$server_name$request_uri;
        }

        server {
            listen 443 ssl;
            server_name www.24kng.fun;

            ssl_certificate /etc/nginx/ssl/fullchain.pem;
            ssl_certificate_key /etc/nginx/ssl/privkey.pem;

            location / {
                proxy_pass http://django;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
            }

            location /static/ {
                alias /app/static/;
            }

            location /media/ {
                alias /app/media/;
            }
        }
    }
